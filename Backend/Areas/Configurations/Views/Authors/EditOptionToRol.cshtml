@model Domain.SEG.OptionRol

@{
    ViewBag.Title = "EditOptionToRol";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditOptionToRol</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>OptionRol</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.OptionRolId)
    @Html.HiddenFor(model => model.RolId)

    <div class="form-group">
        @Html.LabelFor(model => model.OptionId, "OptionId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OptionId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OptionId, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Undefined, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Undefined)
                @Html.ValidationMessageFor(model => model.Undefined, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Index, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Index)
                @Html.ValidationMessageFor(model => model.Index, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Details)
                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Create, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Create)
                @Html.ValidationMessageFor(model => model.Create, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Edit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Edit)
                @Html.ValidationMessageFor(model => model.Edit, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Delete, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Delete)
                @Html.ValidationMessageFor(model => model.Delete, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <a class="btn btn-success" href="@Url.Action("DetailsRol", "Authors", new { area = "Configurations" , id=@Model.RolId })">
                <span class="glyphicon glyphicon-circle-arrow-left"></span> Retornar al Rol
            </a>
            <button type="submit" class="btn btn-primary">
                <i class="glyphicon glyphicon-floppy-disk"></i> Guardar
            </button>
        </div>
    </div>
</div>
}

 
