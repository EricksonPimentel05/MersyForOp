@model Domain.POS.Inventory

@{
    ViewBag.Title = "Detalle de Inventario";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.InventoryId)
        <p>
            <a class="btn btn-success" href="@Url.Action("Index", "Inventories", new { area = "Pos"  })">
                <span class="fa fa-reply"></span> Volver atras
            </a>
            <a class="btn btn-warning" href="@Url.Action("Edit", "Inventories", new { area = "Pos", id = @Model.InventoryId })"> <span class="fa fa-pencil-square-o"></span> Ajuste Manual de Inventario </a>
        </p>
        <div class="form-group">
                @Html.LabelFor(model => model.ShopId,  new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.DropDownList("ShopId", null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShopId, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.BarCode, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Product.BarCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.BarCode, "", new { @class = "text-danger" })
            </div>
        </div>

        

       

        <div class="form-group">
            @Html.LabelFor(model => model.Product.CategoryId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("CategoryId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.BrandId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("BrandId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.BrandId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.MeasureId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("MeasureId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Product.MeasureId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                @Html.LabelFor(model => model.Quantity, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Product.BuyPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Product.BuyPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.BuyPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product.SellPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Product.SellPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.SellPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            @Html.LabelFor(model => model.Product.Itbis, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Product.Itbis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Itbis, "", new { @class = "text-danger" })
            </div>
        </div>
   

       
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {
            $('input,textarea,select').attr('disabled', true);
            $('table').DataTable();
        });
    </script>
}
