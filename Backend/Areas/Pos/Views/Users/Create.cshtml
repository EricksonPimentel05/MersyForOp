@model Backend.Models.UserView

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Nuevo Usuario";
}

 

@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.AuthorId)
        
        <div class="form-group">
            @Html.LabelFor(model => model.ShopId, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("ShopId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShopId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserTypeId,   new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownList("UserTypeId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Picture, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.PictureFile,   new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                <div class="file-input-new">
                    <div class="input-group" style="width:280px">
                        <div tabindex="500" class="form-control file-caption">
                            <div class="file-caption-name" id="NombreArchivo">
                            </div>
                        </div>
                        <div class="input-group-btn" style="height:auto">
                            <div tabindex="500" class="btn btn-primary  btn-file">
                                <i class="glyphicon glyphicon-folder-open "></i>

                                @Html.TextBoxFor(model => model.PictureFile, new { type = "file", id = "files" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*@Html.LabelFor(model => model.Imagen, new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                </div>*@
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirm, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.PasswordConfirm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.StatusId, "StatusId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StatusId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <a class="btn btn-warning" href="@Url.Action("Index", "Users", new { area = "Pos" })">
                    <span class="fa fa-times "></span> Cancelar
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-floppy-o "></i> Guardar
                </button>

            </div>
        </div>
        
    </div>
}

<div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

    }
</div>
