@model Domain.CPO.BankCheck

@{
    ViewBag.Title = "Detalle de Cheque";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BankCheckId)
        
        <p>
            <a class="btn btn-success" href="@Url.Action("Index", "BankChecks", new { area = "Pos" })">
                <span class="fa fa-reply"></span> Volver atras
            </a>
            <a class="btn btn-warning" href="@Url.Action("Edit", "BankChecks", new { area = "Pos", id = Model.BankCheckId })"> <span class="fa fa-pencil-square-o"></span> Editar Cheque </a>
            <a class="btn btn-primary" id="BtnPrint">
                <span class="fa fa-print"></span> Imprimir
            </a>
        </p>
        <div class="form-group">
            @Html.LabelFor(model => model.BankCheckDate, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.BankCheckDate, new { htmlAttributes = new { @class = "form-control PsDates" } })
                @Html.ValidationMessageFor(model => model.BankCheckDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InNameOf, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.InNameOf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InNameOf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LetterAmount, new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.LetterAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LetterAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(function () {

            $('input,textarea,select').attr('disabled', true);

            $('#BtnPrint').click(function() {

              //  var detalle = "<br><br>";
             //   detalle += " <center> Fecha: <b>" + '@Model.BankCheckDate.ToString().Substring(0,10)' + "</b> </center> <br>";
             //   detalle += " <b>" + '@Model.Description' + "</b>  <br>";
             //   detalle += "" + '@Model.Description' + " <br><br><br> <br>"; detalle += "<br><br><br><br>  ";
                //detalle += "<div style='position:absolute; width:100%; bottom=1px;' align='right'>Firma Medico:_______________________________</div>";



                var url = '@Url.Action("BankCheckPrint", "Reports", new {area = "Configurations", id = Model.BankCheckId})';
                //url = url + "&body=" + encodeURIComponent(detalle);
                var win = window.open(url);

                if (win) {
                    //Browser has allowed it to be opened
                    win.focus();
                } else {
                    //Browser has blocked it
                    alert("Porfavor, debes permitir que se abran las ventanas emergentes o el reporte no va a salir :'( ");
                }

            });
        });
    </script>
}
